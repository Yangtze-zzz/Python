字典是一系列键-值对。每个键都与一个值相关联，你可以使用键来访问与之相关联的值。
与键相关联的值可以是数字、字符串、列表乃至字典。
字典用｛｝表示,键和值之间用冒号分隔，而键-值对之间用逗号分隔如：
alien_0={'color':'green','points':5}

要获取与键相关联的值，可依次指定字典名和放在方括号内的键，如下所示：
alien_0 = {'color':'green'}
print(alien_0['color'])       #green


#添加键值对
排列顺序与添加顺序不同
alien_0['x_position']=0
alien_0['y_position']=25
print(alien_0)                #alien_0={'color':'green','points':5,'y_position'=25,'x_position'=0}

#修改键值对
alien_0=['color']='yellow'

#删除键值对
del alien_0['points']


6-1 人：使用一个字典来存储一个熟人的信息，包括名、姓、年龄和居住的城市。该字典应包含键first_name、last_name、age和city。
    将存储在该字典中的每项信息都打印出来

info = {'first_name': 'Vin', 'last_name': 'Diesel', 'age': '52', 'city': 'New York'}
print(info['first_name'])
print(info['last_name'])
print(info['age'])
print(info['city'])


6-2 喜欢的数字：使用一个字典来存储一些人喜欢的数字。请想出5个人的名字，并将这些名字用作字典中的键；想出每个人喜欢一个数字，
    并将这些数字作为值存储在字典中；想出每个人喜欢的一个数字，并将这些数字作为值存储在字典中。打印每个人的名字和喜欢的数字。
    为了使这个程序更有趣，通过询问朋友确保数据是真实的。

num ={'Mike':'2','Alice':'4','Eric':'7','Sam':'8','Olive':'9'}
print("Mike's favorite number is " + num['Mike'])
print("Alice's favorite number is " + num['Alice'])
print("Eric's favorite number is " + num['Eric'])
print("Sam's favorite number is " + num['Sam'])
print("Olive's favorite number is " + num['Olive'])


6-3 词汇表：Python字典可用于模拟现实生活中的字典，但为避免混淆，我们将后者称为词汇表
    ·想出你在前面学过的5个编程词汇，将它们用作词汇表中的键，并将它们的含义作为值存储在词汇表中
    ·以整洁的方式打印每个词汇及其含义。为此，你可以先打印词汇，在它后面加上一个冒号，再打印词汇的含义；也可在一行打印词汇，再使用换行符(\n)
     插入一个空行，然后在下一行以缩进的方式打印词汇的含义


Word = {'int':'integer number', 'print':'a function to print something on the screen',
        'char':'the base element of string', 'if':'judgment conditions', 'sort':'arrange lists'}
print('int'+': '+Word['int'])
print('print'+': '+Word['print'])
print('char'+': '+Word['char'])
print('if'+': '+Word['if'])
print('sort'+': '+Word['sort'])
