字典是一系列键-值对。每个键都与一个值相关联，你可以使用键来访问与之相关联的值。
与键相关联的值可以是数字、字符串、列表乃至字典。
字典用｛｝表示,键和值之间用冒号分隔，而键-值对之间用逗号分隔如：
alien_0={'color':'green','points':5}

要获取与键相关联的值，可依次指定字典名和放在方括号内的键，如下所示：
alien_0 = {'color':'green'}
print(alien_0['color'])       #green


#添加键值对
排列顺序与添加顺序不同
alien_0['x_position']=0
alien_0['y_position']=25
print(alien_0)                #alien_0={'color':'green','points':5,'y_position'=25,'x_position'=0}

#修改键值对
alien_0=['color']='yellow'

#删除键值对
del alien_0['points']


6-1 人：使用一个字典来存储一个熟人的信息，包括名、姓、年龄和居住的城市。该字典应包含键first_name、last_name、age和city。
    将存储在该字典中的每项信息都打印出来

info = {'first_name': 'Vin', 'last_name': 'Diesel', 'age': '52', 'city': 'New York'}
print(info['first_name'])
print(info['last_name'])
print(info['age'])
print(info['city'])


6-2 喜欢的数字：使用一个字典来存储一些人喜欢的数字。请想出5个人的名字，并将这些名字用作字典中的键；想出每个人喜欢一个数字，
    并将这些数字作为值存储在字典中；想出每个人喜欢的一个数字，并将这些数字作为值存储在字典中。打印每个人的名字和喜欢的数字。
    为了使这个程序更有趣，通过询问朋友确保数据是真实的。

num ={'Mike':'2','Alice':'4','Eric':'7','Sam':'8','Olive':'9'}
print("Mike's favorite number is " + num['Mike'])
print("Alice's favorite number is " + num['Alice'])
print("Eric's favorite number is " + num['Eric'])
print("Sam's favorite number is " + num['Sam'])
print("Olive's favorite number is " + num['Olive'])


6-3 词汇表：Python字典可用于模拟现实生活中的字典，但为避免混淆，我们将后者称为词汇表
    ·想出你在前面学过的5个编程词汇，将它们用作词汇表中的键，并将它们的含义作为值存储在词汇表中
    ·以整洁的方式打印每个词汇及其含义。为此，你可以先打印词汇，在它后面加上一个冒号，再打印词汇的含义；也可在一行打印词汇，再使用换行符(\n)
     插入一个空行，然后在下一行以缩进的方式打印词汇的含义


Word = {'int':'integer number', 'print':'a function to print something on the screen',
        'char':'the base element of string', 'if':'judgment conditions', 'sort':'arrange lists'}
print('int'+': '+Word['int'])
print('print'+': '+Word['print'])
print('char'+': '+Word['char'])
print('if'+': '+Word['if'])
print('sort'+': '+Word['sort'])


#遍历字典
user_0={
    'username': 'efermi',
    'first': 'enrico',
    'last': 'fermi',
}

for key, value in user_0.items():
    print("\nKey:"+key)
    print("Value:"+value)
    

#遍历字典中所有的键
遍历字典时，会默认遍历所有的键
for key in user_0.keys():               #for key in user_0：
    print(key)


#遍历字典中的所有值
for key in user_0.values():             #不考虑重复
    print(key)
    
for key in set(user_0.values()):        #无重复
    print(key)
    

6-4 词汇表2：既然你知道了如何遍历字典，现在请整理你为完成练习6-3而编写的代码，将其中的一系列print语句替换为一个遍历字典中的键和值的循环。
    确定该循环正确无误后，再在词汇表中添加5个Python术语。当你再次运行这个程序时，这个新术语及其含义将自动包含在输出中
    
Word = {'int':'integer number',
        'print':'a function to print something on the screen',
        'char':'the base element of string',
        'if':'judgment conditions',
        'sort':'arrange lists',
        'attribute':'属性',
        'argument':'实参',
        'dictionary':'字典',
        'exception':'异常',
        'expression':'表达式',
        }
for key,value in Word.items():
    print(key +': '+value)
    

6-5 河流：创建一个字典，在其中存储三条大河流及其流经的国家。其中一个键-值对可能是'nile':'egypt'
    ·使用循环为每条河流打印一条消息，如"The Nile runs through Egypt."
    `使用循环将该字典中每条河流的名字都打印出来
    ·使用循环将该字典包含的每个国家的名字都打印出来
    
Rivers = {
    'Amazon':'Brazil',
    'nile':'egypt',
    'Yangtze':'China',
}

for key,value in Rivers.items():
    print("The "+key.title()+" runs through "+value.title())
    
for river in Rivers.keys():
    print(river.title())

for country in Rivers.values():
    print(country.title())
    

6-6 调查：在6.3.1节编写的程序favorite_languages.py中执行以下操作
    ·创建一个应该会接受调查的人员名单，其中有些人已包含在字典中，而其他人未包含在字典中
    ·遍历这个人员名单，对于已参与调查的人，打印一条消息表示感谢。对于还未参与调查的人，打印一条消息邀请他参与调查
    
favorite_languages = {
    'jen':'python',
    'sarah':'c',
    'edward':'ruby',
    'phil':'python',

}

new_list = {
    'jen': 'python',
    'sarah': 'c',
    'edward': 'ruby',
    'phil': 'python',
    'ken':'java',
    'mike':'c#'
}

temp = []
for t in favorite_languages.keys():
    temp.append(t)

for name in new_list.keys():
    if name in temp:
        print(name.title()+", thank you for your participation in the survey")
    else:
        print(name.title()+", please take our poll!")    


#嵌套
字典存储在列表中
alien_0 = {'color': 'green', 'points': 5}
alien_1 = {'color': 'yellow', 'points': 10}
alien_2 = {'color': 'red', 'points': 15}

aliens = [alien_0, alien_1, alien_2]

for alien in aliens:
    print(alien)

#   {'color': 'green', 'points': 5}
    {'color': 'yellow', 'points': 10}
    {'color': 'red', 'points': 15}
    
    

#在字典中存储列表
favorite_languages = {
    'jen': ['python', 'ruby'],
    'sarah': ['c'],
    'edward': ['go', 'ruby'],
    'phil': ['python', 'haskell'],
}

for name,languages in favorite_languages.items():
    print("\n "+ name.title()+"'s favorite languages are:")
    for language in languages:
        print("\t" +language.title())



#在字典中存储字典
users = {
    'aeinstein': {
        'first': 'albert',
        'last': 'einstein',
        'location': 'princeton',
    },

    'mcurie': {
        'first': 'marie',
        'last': 'curie',
        'location': 'paris',
    },
}

for username,user_info in  users.items():
    print("\nUsername:"+username)
    full_name = user_info['first']+" "+user_info['last']
    location = user_info['location']

    print("\tFull name:" + full_name.title())
    print("\tLocation:" + location.title())


6-7 人：在为完成练习6-1而编写的程序中，再创建两个表示人的字典，然后将这三个字典都存储在一个名为people的列表中。遍历这个列表，
    将其中每个人的所有信息都打印出来
    
name_0 ={'first_name': 'Vin',
        'last_name': 'Diesel',
        'age': '52',
        'city': 'New York'
        }

name_1 ={'first_name': 'Harrison',
        'last_name': 'Ford',
        'age': '77',
        'city': 'Chicago'
        }

name_2 ={'first_name': 'Christine',
        'last_name': 'Stewart',
        'age': '29',
        'city': 'Los Angeles'
        }

people = [name_0, name_1, name_2]
for p in people:
    print(p)

6-8 宠物：创建多个字典，对于每个字典，都使用一个宠物的名称来给它命名；在每个字典中，包含宠物的类型及其主人的名字。
    将这些字典存储在一个名为pets的列表中，再遍历该列表，并将宠物的所有信息都打印出来
    
KK ={'type': 'Puppet cat',
     'master': 'Alice'
     }

Angle ={'type': 'Scotland fold',
        'master': 'John'
     }

pets = [KK,Angle]
for pet in pets:
    print(pet)
    
6-9 喜欢的地方：创建一个名为favorite_places 的字典。在这个字典中，将三个人的名字用作键；对于其中的每个人，都存储他喜欢的1~3个地方。
    为让这个练习更有趣些，可让一些朋友指出他们喜欢的几个地方。遍历这个字典，并将其中每个人的名字及其喜欢的地方打印出来
    
favorite_places = {
    'Mike':['Hangzhou', 'Shanghai', 'Chongqing'],
    'Eric':['Shenzhen', 'Guangzhou'],
    'Alice':['Ningbo', 'Xiamen'],
}

for name, places in favorite_places.items():
    print(name + "'s favorite places are:")
    for place in places:
        print("\t" + place.title())

6-10 喜欢的数字：修改为完成练习6-2而编写的程序，让每个人都可以有多个喜欢的数字，然后将每个人的名字及其喜欢的数字打印出来

nums ={'Mike': ['2', '4'],
      'Alice': ['2', '8'],
      'Eric': ['7', '5'],
      'Sam': ['3', '4'],
      'Olive': ['9', '1']
      }

for name,nums in nums.items():
    print(name +"'s favorite numbers are:")
    for num in nums:
        print("\t"+ num)

6-11 城市：创建一个名为cities的字典，其中将三个城市名用作键；对于每座城市，都创建一个字典，并在其中包含该城市所属的国家、人口约数以及
     一个有关该城市的事实。在表示每座城市的字典中，应包含country,population和fact等键。将每座城市的名字以及有关它们的信息都打印出来
     
cities = { 'Hangzhou':{
                'country': 'China',
                'population': '98.06 million',
                'fact': 'Summer is hot'
               },
           'Chicago':{
                'country': 'America',
                'population': '2,705,994',
                'fact': "America's Third Big City"
               },
           'Tokyo':{
                'country': 'Japan',
                'population': '37 million',
                'fact': "It's the busiest city in Asia"
               },
         }

for city, city_info in cities.items():
    print("\nCity:" + city)
    print("country:"+city_info['country'])
    print("population:" + city_info['population'])
    print("fact:" + city_info['fact'])
